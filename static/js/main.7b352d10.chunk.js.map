{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","onSearchChange","e","term","target","value","setState","props","this","clearFilter","clearButton","type","id","onClick","placeholder","onChange","Component","TodoListItem","text","current","onChangeText","onKeyDown","keyCode","shiftKey","preventDefault","contentEditable","blur","React","createRef","label","onDeleted","onToggleImportant","onToggleDone","important","draggable","handleStyle","onSubmit","onSave","onMouseEnter","onMouseEnder","onMouseLeave","checked","innerRef","html","TodoList","onSwapIndex","fromIndex","toIndex","undefined","todos","activeElements","filter","el","fromId","toId","findIndex","map","item","itemProps","key","newText","doneElements","onDragEnd","nodeSelector","handleSelector","ItemAddForm","state","onLabelChange","length","onAddItem","contentClassName","App","deleteItem","todoData","idx","slice","addItem","newItem","createItem","sortItems","swapIndex","setProperty","onFilterChange","maxId","arr","propName","lambda","oldItem","data","splice","sort","a","b","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b352d10.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  }\r\n\r\n  render() {\r\n    const {term,clearFilter} = this.props;\r\n\r\n    let clearButton = '';\r\n\r\n    if(term) {\r\n      clearButton = <div className=\"input-group-append\">\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            id=\"button-addon2\"\r\n            onClick={clearFilter}>\r\n            <i className=\"fa fa-times\" />\r\n          </button>\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"input-group input-group-sm mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\"><i className=\"fa fa-filter\"></i></span>\r\n        </div>\r\n        <input type=\"text\" className=\"form-control  search-input\" placeholder=\"Filter\" value={term} onChange={this.onSearchChange} />\r\n        {clearButton}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n        // <input type=\"text\"\r\n        //   className=\"form-control search-input\"\r\n        //   placeholder=\"type to search\" value={this.state.term} onChange={this.onSearchChange} />","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.text = React.createRef();\r\n    this.contentEditable = React.createRef();\r\n    this.onChangeText = this.props.onChangeText;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.text.current = e.target.value;\r\n    this.onChangeText(this.text.current);\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      if (!e.shiftKey) {\r\n        e.preventDefault();\r\n        this.contentEditable.current.blur();\r\n        this.onChangeText(this.text.current);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { label, onDeleted,\r\n      onToggleImportant, onToggleDone,\r\n      important, done, draggable } = this.props\r\n\r\n    const hidden = false;\r\n\r\n    this.text.current = label;\r\n\r\n    const handleStyle = draggable === true ? 'todo-list-item__handle--active' : 'todo-list-item__handle--inactive';\r\n    return (\r\n      <form onSubmit={this.onSave}>\r\n        <div className={`input-group input-group-sm mb-3 todo-list-item ${done ? 'done' : ''} ${important ? 'important' : ''}`}\r\n          onMouseEnter={this.onMouseEnder}\r\n          onMouseLeave={this.onMouseLeave}>\r\n          <div className=\"input-group-prepend\">\r\n            <div className={`input-group-text todo-list-item__handle ${handleStyle}`}>\r\n              <i className=\"fa fa-ellipsis-v\" /><i className=\"fa fa-ellipsis-v\" />\r\n            </div>\r\n            <div className=\"input-group-text\">\r\n              <input type=\"checkbox\"\r\n                checked={done}\r\n                onChange={onToggleDone} />\r\n            </div>\r\n          </div>\r\n          <ContentEditable\r\n            innerRef={this.contentEditable}\r\n            className=\"todo-list-item__text\"\r\n            html={this.text.current}\r\n            onChange={this.onChange}\r\n            onKeyDown={this.onKeyDown} />\r\n          <div className=\"input-group-append\">\r\n            <button type=\"button\"\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={onToggleImportant}>\r\n              <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n            <button type=\"button\"\r\n              className={`btn btn-danger btn-sm ${hidden ? 'todo-list-item__button--hidden' : ''}`}\r\n              onClick={onDeleted}>\r\n              <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n};","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport ReactDragListView from 'react-drag-listview'\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nexport default class TodoList extends Component {\r\n\r\n  onSwapIndex = (fromIndex, toIndex) => {\r\n    if(toIndex === undefined) {\r\n      return;\r\n    }\r\n    const { todos, onSwapIndex } = this.props;\r\n    const activeElements = todos.filter((el) => {\r\n      return !el.done;\r\n    });\r\n    const fromId = activeElements[fromIndex].id;\r\n    const toId = activeElements[toIndex].id;\r\n    const realFromIndex = todos.findIndex((el) => (el.id === fromId));\r\n    const realToIndex = todos.findIndex((el) => (el.id === toId));\r\n    onSwapIndex(realFromIndex, realToIndex);\r\n  }\r\n\r\n  render() {\r\n    const { todos, onDeleted, onToggleImportant,\r\n      onToggleDone, onChangeText,\r\n      draggable } = this.props;\r\n\r\n    const activeElements = todos.filter((el) => {\r\n      return !el.done;\r\n    }).map((item) => {\r\n      const { id, ...itemProps } = item;\r\n      return (\r\n        <li key={id}>\r\n          <TodoListItem {...itemProps}\r\n            onDeleted={() => onDeleted(id)}\r\n            onToggleImportant={() => onToggleImportant(id)}\r\n            onToggleDone={() => onToggleDone(id)}\r\n            onChangeText={(newText) => onChangeText(newText, id)}\r\n            draggable={draggable} />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    const doneElements = todos.filter((el) => {\r\n      return el.done;\r\n    }).map((item) => {\r\n      const { id, ...itemProps } = item;\r\n      return (\r\n        <li key={id}>\r\n          <TodoListItem {...itemProps}\r\n            onDeleted={() => onDeleted(id)}\r\n            onToggleImportant={() => onToggleImportant(id)}\r\n            onToggleDone={() => onToggleDone(id)}\r\n            onChangeText={(newText) => onChangeText(newText, id)} />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <ReactDragListView\r\n          onDragEnd={this.onSwapIndex}\r\n          nodeSelector=\"li\"\r\n          handleSelector=\".todo-list-item__handle--active\">\r\n          <ul className=\"todo-list\">\r\n            {activeElements}\r\n          </ul>\r\n        </ReactDragListView>\r\n        <ul className=\"todo-list\">\r\n          {doneElements}\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n};\r\n\r\n// onDragEnd={(fromIndex, toIndex) => onSwapIndex(fromIndex, toIndex)}","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.contentEditable = React.createRef();\r\n    }\r\n\r\n    onLabelChange = (e) => { // delete me\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        const {text} = this.state;\r\n        if (text && text.length) {\r\n            this.props.onAddItem(text);\r\n        } else {\r\n            this.props.onAddItem(\"New item..\");\r\n        }\r\n        this.setState({text: \"\"});\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const text = e.target.value\r\n        this.setState({text});\r\n    }\r\n\r\n    onKeyDown = (e) => {\r\n        if (e.keyCode === 13) {\r\n            if (!e.shiftKey) {\r\n                e.preventDefault();\r\n                this.contentEditable.current.blur();\r\n                this.onSubmit();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let contentClassName = ''\r\n        const {text} = this.state;\r\n        \r\n        if(text === '') {\r\n            contentClassName = 'item-add-form__text item-add-form__text--empty'\r\n        } else {\r\n            contentClassName = 'item-add-form__text'\r\n        }\r\n\r\n        return (\r\n            <div className=\"input-group input-group-sm mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <button className=\"btn btn-secondary\" onClick={this.onSubmit}>\r\n                        <i className=\"fa fa-plus\"></i>\r\n                    </button>\r\n                </div>\r\n                <ContentEditable\r\n                    innerRef={this.contentEditable}\r\n                    className={contentClassName}\r\n                    html={text}\r\n                    onChange={this.onChange}\r\n                    onKeyDown={this.onKeyDown} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/* <input type=\"text\"\r\nclassName=\"form-control\"\r\nonChange={this.onLabelChange}\r\nplaceholder=\"New Item\"\r\nvalue={this.state.label}\r\nonBlur={this.onSubmit} /> */","import App from './app'\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.maxId = 100;\r\n    this.state = {\r\n      todoData: [\r\n        this.createItem('Master Luke here is your rightful owner.'),\r\n        this.createItem('He is here... Obi-Wan Kenobi! What makes you think so?'),\r\n        this.createItem('My father will know how to retrieve it. You must see this droid safelydelivered to him on Alderaan.'),\r\n        this.createItem('General Kenobi, years ago you served my father in the Clone Wars. '),\r\n        this.createItem('Come on. There are two Banthas down there but I don\\'t see any...wait a second, they\\'re Sandpeople all right.'),\r\n        this.createItem('Jabba\\'s through with you. He has no time for smugglers who drop their shipments at the first sign of an Imperial cruiser. Even I get boarded sometimes. '),\r\n        this.createItem('Add clear filter button')\r\n      ],\r\n      term: ''\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id)\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    });\r\n  };\r\n\r\n  createItem(text) {\r\n    return {\r\n      label: text,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createItem(text);\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.sortItems([...todoData, newItem])\r\n      };\r\n    });\r\n  }\r\n\r\n  setProperty(arr, id, propName, lambda) {\r\n    const idx = arr.findIndex((el) => el.id === id)\r\n    const oldItem = arr[idx];\r\n    const newItem = {\r\n      ...oldItem,\r\n      [propName]: lambda(oldItem.[propName])\r\n    };\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  swapIndex(arr, fromIndex, toIndex) {\r\n    const data = [...arr];\r\n    const item = data.splice(fromIndex, 1)[0];\r\n    data.splice(toIndex, 0, item);\r\n    return data;\r\n  };\r\n\r\n  onSwapIndex = (fromIndex, toIndex) => {\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: this.swapIndex(todoData, fromIndex, toIndex) };\r\n    });\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: this.sortItems(this.setProperty(todoData, id, 'important', value => !value)) };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: this.setProperty(todoData, id, 'done', value => !value) };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  onChangeText = (newText, id) => {\r\n    this.setState(({ todoData }) => {\r\n      return { todoData: this.setProperty(todoData, id, 'label', value => newText) };\r\n    });\r\n  }\r\n\r\n  clearFilter = () => {\r\n    this.setState({term:''});\r\n  }\r\n\r\n  sortItems(arr) {\r\n    return arr.sort((a, b) => {\r\n      if (!a.important && b.important) {\r\n        return 1;\r\n      } else if (a.important && !b.important) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  search(arr, term) {\r\n    if (term.length === 0) {\r\n      return arr;\r\n    }\r\n    return arr.filter((el) => (el.label.toLowerCase().indexOf(term.toLowerCase()) > -1));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { todoData, term } = this.state;\r\n    const visibleItems = this.search(todoData, term);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    const draggable = (term === '') ? true : false;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel \r\n          onSearchChange={this.onSearchChange} \r\n          clearFilter={this.clearFilter}\r\n          term={term}/>\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n          onChangeText={this.onChangeText}\r\n          onSwapIndex={this.onSwapIndex}\r\n          draggable={draggable} />\r\n\r\n        <ItemAddForm onAddItem={this.addItem} />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}